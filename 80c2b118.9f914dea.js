(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{209:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var r=n(2),o=n(9),a=(n(0),n(268)),c={},i={id:"version-1.x.x/nodes/color",title:"color",description:"color",source:"@site/versioned_docs/version-1.x.x/nodes/color.md",permalink:"/react-native-reanimated/docs/1.x.x/nodes/color",editUrl:"https://github.com/software-mansion/react-native-reanimated/tree/master/docs/versioned_docs/version-1.x.x/nodes/color.md",version:"1.x.x",sidebar:"version-1.x.x/docs",previous:{title:"call",permalink:"/react-native-reanimated/docs/1.x.x/nodes/call"},next:{title:"concat",permalink:"/react-native-reanimated/docs/1.x.x/nodes/concat"}},l=[{value:"<code>color</code>",id:"color",children:[]}],p={rightToc:l};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"color"},Object(a.b)("inlineCode",{parentName:"h2"},"color")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"color(red, green, blue, alpha);\n")),Object(a.b)("p",null,"Creates a color node in RGBA format, where the first three input nodes should have ",Object(a.b)("em",{parentName:"p"},"integer")," values in the range 0-255 (consider using ",Object(a.b)("inlineCode",{parentName:"p"},"round")," node if needed) and correspond to color components Red, Green and Blue respectively. Last input node should have a value between 0 and 1 and represents alpha channel (value ",Object(a.b)("inlineCode",{parentName:"p"},"1")," means fully opaque and ",Object(a.b)("inlineCode",{parentName:"p"},"0")," completely transparent). Alpha parameter can be ommited, then ",Object(a.b)("inlineCode",{parentName:"p"},"1")," (fully opaque) is used as a default."),Object(a.b)("p",null,"The returned node can be mapped to view properties that represents color (e.g. ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://facebook.github.io/react-native/docs/view-style-props.html#backgroundcolor"}),Object(a.b)("inlineCode",{parentName:"a"},"backgroundColor")),")."),Object(a.b)("h5",{id:"note-in-order-to-interpolate-color-output-values-use-interpolatecolors-instead"},"Note: In order to interpolate color output values, use ",Object(a.b)("a",Object(r.a)({parentName:"h5"},{href:"interpolate-colors.html"}),Object(a.b)("inlineCode",{parentName:"a"},"interpolateColors"))," instead."))}s.isMDXComponent=!0},268:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),b=r,m=u["".concat(c,".").concat(b)]||u[b]||d[b]||a;return n?o.a.createElement(m,i(i({ref:t},p),{},{components:n})):o.a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=b;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var p=2;p<a;p++)c[p]=n[p];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);